#!/bin/ksh
############################################################################
# Script name:		exfv3cam_post.sh
# Script description:	Run the post processor jobs to create grib2 output.
# Script history log:
#   1) 2018-08-20	Eric Aligo / Hui-Ya Chuang
#                       Created script to post process output 
#                       from the SAR-FV3.
#   2) 2018-08-23	Ben Blake
#                       Adapted script into EE2-compliant Rocoto workflow.
#   3) 2019-11-06       Matthew Pyle
#                       Establishing an "odd/even" post script in case NCO wants it like
#                       current HiresW
############################################################################
set -x

fhr=00
fhrend=60
INCR=02

MODEL=fv3


# see if any postdone files exist, and if so, which is last hour completed


while [ $fhr -le $fhrend ]
do

incr=2

if [ -e postdone${fhr}.${tmmark} ]
then
let fhr=fhr+incr

if [ $fhr -lt 10 ]
then
fhr=0$fhr
fi

fhrsave=${fhr}

else

fhrsave=${fhr}
fhr=99

fi

done

fhr=${fhrsave}

echo STARTING POST with fhr $fhr


while [ $fhr -le $fhrend ]
do

if [ $tmmark = tm00 ] ; then
  export NEWDATE=`${NDATE} +${fhr} $CDATE`
else
  offset=`echo $tmmark | cut -c 3-4`
  export vlddate=`${NDATE} -${offset} $CDATE`
  export NEWDATE=`${NDATE} +${fhr} $vlddate`
fi
export YYYY=`echo $NEWDATE | cut -c1-4`
export MM=`echo $NEWDATE | cut -c5-6`
export DD=`echo $NEWDATE | cut -c7-8`
export HH=`echo $NEWDATE | cut -c9-10`

cat > itag <<EOF
${INPUT_DATA}/dynf0${fhr}.nc
netcdf
grib2
${YYYY}-${MM}-${DD}_${HH}:00:00
FV3R
${INPUT_DATA}/phyf0${fhr}.nc

 &NAMPGB
 KPO=47,PO=1000.,975.,950.,925.,900.,875.,850.,825.,800.,775.,750.,725.,700.,675.,650.,625.,600.,575.,550.,525.,500.,475.,450.,425.,400.,375.,350.,325.,300.,275.,250.,225.,200.,175.,150.,125.,100.,70.,50.,30.,20.,10.,7.,5.,3.,2.,1.,
 /
EOF

rm -f fort.*

# copy flat files
cp ${PARMfv3}/nam_micro_lookup.dat      ./eta_micro_lookup.dat
cp ${PARMfv3}/postxconfig-NT-fv3sar.txt ./postxconfig-NT.txt
cp ${PARMfv3}/params_grib2_tbl_new      ./params_grib2_tbl_new

# Run the post processor
export pgm=regional_post.x
. prep_step

startmsg
${APRUNC} ${POSTGPEXEC} < itag > $pgmout 2> err
export err=$?; err_chk

# Run wgrib2
domain=${dom}

echo done > ${INPUT_DATA}/postdone${fhr}.${tmmark}


################################################
if [ $dom = "conus" ]
then
################################################


# put USH calls in here

echo "#!/bin/bash" > $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_big_grid_g2.sh $fhr $dom $cyc $MODEL 1 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_big_grid_g2.sh $fhr $dom $cyc $MODEL 2 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_big_grid_g2.sh $fhr $dom $cyc $MODEL 3 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_5km_grid_g2.sh     $fhr $dom $cyc $MODEL 1 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_5km_grid_g2.sh     $fhr $dom $cyc $MODEL 2 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_5km_grid_g2.sh     $fhr $dom $cyc $MODEL 3 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_5km_grid_g2.sh     $fhr $dom $cyc $MODEL 4 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_5km_grid_g2.sh     $fhr $dom $cyc $MODEL 5 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_5km_grid_g2.sh     $fhr $dom $cyc $MODEL 6 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh_eastwest $fhr $dom $cyc $MODEL 1 east &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh_eastwest $fhr $dom $cyc $MODEL 2 east &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh_eastwest $fhr $dom $cyc $MODEL 1 west &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh_eastwest $fhr $dom $cyc $MODEL 2 west &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_3km_grid_g2.sh     $fhr $dom $cyc $MODEL 1 &" >> $DATA/poescript_${fhr}
echo "wait" >> $DATA/poescript_${fhr}
chmod 775 $DATA/poescript_${fhr}
command="aprun -n 1 -N 1 -d 14 $DATA/poescript_${fhr} "

time $command
export err=$?; err_chk

# reassemble the large 5 km output grid

  if test $SENDCOM = 'YES'
  then

cat $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_2 \
    $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_3 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_4 \
    $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_5 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_6 > \
    $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2

$WGRIB2 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2 -ncep_uv $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2
$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2 -s > $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2.idx

## subset the full CONUS grid to approximate the CAM common grid list
## now likely will interpolate subset products to 3 km grid instead for CONUS

### change to use a PARM .txt file, and do for CONUS and AK

# cp $PARMhiresw/hiresw_subset.txt .

# $WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2 |  grep -F -f hiresw_subset.txt | \
# $WGRIB2  -i -grib $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.subset.grib2  $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2

cat $DATA/${RUN}.t${cyc}z.${MODEL}_3km.f${fhr}.conus.grib2_1  > $COMOUT/${RUN}.t${cyc}z.${MODEL}_3km.f${fhr}.conus.subset.grib2
$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_3km.f${fhr}.conus.subset.grib2 -s > $COMOUT/${RUN}.t${cyc}z.${MODEL}_3km.f${fhr}.conus.subset.grib2.idx


    if [ $SENDDBN = YES ]; then
       $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE}      $job $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2
       $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE_WIDX} $job $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2.idx
    fi

  fi # SENDCOM


rm  $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_2 \
    $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_3 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_4 \
    $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_5 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conus.grib2_6

# reassemble the ndfd output grid

cat $DATA/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.${dom}.grib2_1  $DATA/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.${dom}.grib2_2 \
    $DATA/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.${dom}.grib2_3 > $DATA/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.${dom}.grib2



s this overwritten by smartinit output?
#  if test $SENDCOM = 'YES'
#  then
# cp $DATA/prdgen_full/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.conus.grib2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.conus.grib2
#   fi

rm $DATA/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.conus.grib2_1
rm $DATA/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.conus.grib2_2
rm $DATA/${RUN}.t${cyc}z.${MODEL}_2p5km.f${fhr}.conus.grib2_3

# reassemble the legacy 5 km output grid

  if test $SENDCOM = 'YES'
  then
cat $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2_2 \
 > $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2

$WGRIB2 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2 -ncep_uv $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2

cat $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2_2 \
 > $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2

$WGRIB2 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2 -ncep_uv $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2

$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2 -s > $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2.idx
$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2 -s > $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2.idx
  fi

rm $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuseast.grib2_2
rm $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.conuswest.grib2_2

################################################
elif [ $dom = "ak" ]
then
################################################

echo "#!/bin/bash" > $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_big_grid_g2.sh $fhr $dom $cyc $MODEL 0 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh $fhr $dom $cyc $MODEL 1 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh $fhr $dom $cyc $MODEL 2 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh $fhr $dom $cyc $MODEL 3 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh $fhr $dom $cyc $MODEL 4 &" >> $DATA/poescript_${fhr}
echo "wait" >> $DATA/poescript_${fhr}
chmod 775 $DATA/poescript_${fhr}
command="aprun -n 1 -N 1 -d 5 $DATA/poescript_${fhr} "

time $command
export err=$?; err_chk


  if test $SENDCOM = 'YES'
  then

cat $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_2 \
    $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_3 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_4 > \
  $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2

$WGRIB2 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2 -ncep_uv $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2

rm $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_1 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_2 \
   $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_3 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_4

$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2 -s > $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2.idx

    if [ $SENDDBN = YES ]; then
       $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE}      $job $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2
       $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE_WIDX} $job $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2.idx
    fi


cp $PARMhiresw/hiresw_subset.txt .

$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2 |  grep -F -f hiresw_subset.txt | \
$WGRIB2  -i -grib $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.subset.grib2  $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2


$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.subset.grib2 -s > $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.subset.grib2.idx

  fi

################################################
else
################################################
 
echo "#!/bin/bash" > $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_big_grid_g2.sh $fhr $dom $cyc $MODEL 0 &" >> $DATA/poescript_${fhr}
echo "$USHfv3/regional_prdgen_oldgrid_g2.sh $fhr $dom $cyc $MODEL 0 &" >> $DATA/poescript_${fhr}
echo "wait" >> $DATA/poescript_${fhr}
chmod 775 $DATA/poescript_${fhr}
command="aprun -n 1 -N 1 -d 2 $DATA/poescript_${fhr} "

time $command
export err=$?; err_chk


  if test $SENDCOM = 'YES'
  then

echo here with DATA $DATA

ls -l  $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_0 
$WGRIB2 $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_0 -ncep_uv $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2
$WGRIB2 $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2 -s > $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2.idx

rm $DATA/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2_0

    if [ $SENDDBN = YES ]; then
       $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE}      $job $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2
       $DBNROOT/bin/dbn_alert MODEL ${DBN_ALERT_TYPE_WIDX} $job $COMOUT/${RUN}.t${cyc}z.${MODEL}_5km.f${fhr}.${dom}.grib2.idx
    fi

  fi

fi

export err=$?; err_chk

if [ $SENDCOM = YES ]
then

  if [ $tmmark = tm00 ] ; then
    mv ${domain}${RUN}.f${fhr}.${tmmark} ${COMOUT}/${RUN}.t${cyc}z.${domain}.f${fhr}.grib2
    mv BGDAWP${fhr}.${tmmark} ${COMOUT}/${RUN}.t${cyc}z.${domain}.natprs.f${fhr}.grib2
  else
    mv ${domain}${RUN}.f${fhr}.${tmmark} ${COMOUT}/${RUN}.t${cyc}z.${domain}.f${fhr}.${tmmark}.grib2
    mv BGDAWP${fhr}.${tmmark} ${COMOUT}/${RUN}.t${cyc}z.${domain}.natprs.f${fhr}.${tmmark}.grib2
  fi

fi

echo done > ${INPUT_DATA}/prdgendone${fhr}.${tmmark}

fhr=`expr $fhr + $INCR`

if [ $fhr -lt 10 ]
then
fhr=0$fhr
fi


done

echo EXITING $0

exit
